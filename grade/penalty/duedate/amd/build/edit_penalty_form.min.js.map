{"version":3,"file":"edit_penalty_form.min.js","sources":["../src/edit_penalty_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handles edit penalty form.\n *\n * @module     gradepenalty_duedate/edit_penalty_form\n * @copyright  2024 Catalyst IT\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as notification from 'core/notification';\nimport Fragment from 'core/fragment';\nimport Templates from 'core/templates';\n\n/**\n * Rule js class.\n */\nclass PenaltyRule {\n    constructor() {\n        this.overdueby = 0;\n        this.penalty = 0;\n    }\n}\n\n/**\n * Selectors\n */\nconst SELECTORS = {\n    FORM_CONTAINER: '#penalty_rule_form_container',\n    ACTION_MENU: '.action-menu',\n    ADD_BUTTON: '#addrulebutton',\n    INSERT_BUTTON: '.insertbelow',\n    DELETE_BUTTON: '.deleterulebuttons',\n};\n\n/**\n * Register click event for delete and insert buttons.\n */\nconst registerEventListeners = () => {\n    // Find all action menus in penalty rule form.\n    let container = document.querySelector(SELECTORS.FORM_CONTAINER);\n    const actionMenus = container.querySelectorAll(SELECTORS.ACTION_MENU);\n\n    // Find delete and insert buttons in each action menu.\n    let rulenumber = 0;\n    actionMenus.forEach(actionMenu => {\n        const deleteButton = actionMenu.querySelector(SELECTORS.DELETE_BUTTON);\n        const insertButton = actionMenu.querySelector(SELECTORS.INSERT_BUTTON);\n\n        // Add rule number to the buttons.\n        deleteButton.dataset.rulenumber = rulenumber;\n        // Add event listener to delete button.\n        deleteButton.addEventListener('click', e => {\n            e.preventDefault();\n            deleteRule(e.target);\n        });\n\n        // Add rule number to the buttons.\n        insertButton.dataset.rulenumber = rulenumber;\n        // Add event listener to insert button.\n        insertButton.addEventListener('click', e => {\n            e.preventDefault();\n            insertRule(e.target);\n        });\n\n        // Increment rule number.\n        rulenumber++;\n    });\n\n    // Find the add rule button and add event listener.\n    const addButton = document.querySelector(SELECTORS.ADD_BUTTON);\n    addButton.addEventListener('click', e => {\n        e.preventDefault();\n        addRule();\n    });\n};\n\n/**\n * Delete a rule group.\n *\n * @param {Object} target\n */\nconst deleteRule = target => {\n    // Get all form data.\n    let params = buildFormParams();\n\n    // Get the rule number.\n    let rulenumber = target.dataset.rulenumber;\n\n    // If the rule number is undefined, find the number on its parent.\n    if (rulenumber === undefined) {\n        rulenumber = target.parentElement.dataset.rulenumber;\n    }\n\n    // Convert to integer.\n    rulenumber = parseInt(rulenumber);\n\n    // Remove the penalty rule.\n    let penaltyRules = JSON.parse(params.penaltyrules);\n    penaltyRules.splice(rulenumber, 1);\n    penaltyRules = JSON.stringify(penaltyRules);\n    params.penaltyrules = penaltyRules;\n\n    loadPenaltyRuleForm(params.contextid, params);\n};\n\n/**\n * Insert a rule group below the clicked button.\n *\n * @param {Object} target\n */\nconst insertRule = target => {\n    // Get all form data.\n    let params = buildFormParams();\n\n    // Get the rule number.\n    let rulenumber = target.dataset.rulenumber;\n\n    // If the rule number is undefined, find the number on its parent.\n    if (rulenumber === undefined) {\n        rulenumber = target.parentElement.dataset.rulenumber;\n    }\n\n    // Convert to integer.\n    rulenumber = parseInt(rulenumber);\n\n    // Insert a new penalty rule.\n    let penaltyRule = new PenaltyRule();\n    let penaltyRules = JSON.parse(params.penaltyrules);\n    penaltyRules.splice(rulenumber + 1, 0, penaltyRule);\n    penaltyRules = JSON.stringify(penaltyRules);\n    params.penaltyrules = penaltyRules;\n\n    loadPenaltyRuleForm(params.contextid, params);\n};\n\n/**\n * Add a new rule group.\n */\nconst addRule = () => {\n    // Get all form data.\n    let params = buildFormParams();\n\n    // Add a new penalty rule.\n    let penaltyRule = new PenaltyRule();\n    let penaltyRules = JSON.parse(params.penaltyrules);\n    penaltyRules.push(penaltyRule);\n    penaltyRules = JSON.stringify(penaltyRules);\n    params.penaltyrules = penaltyRules;\n\n    loadPenaltyRuleForm(params.contextid, params);\n};\n\n/**\n * Build form parameters for loading fragment.\n *\n * @return {Object} form params\n */\nconst buildFormParams = () => {\n    // Get the penalty rule form in its container.\n    let container = document.querySelector(SELECTORS.FORM_CONTAINER);\n    let form = container.querySelector('form');\n\n    // Get all form data\n    let formData = new FormData(form);\n\n    // Get context id.\n    let contextid = formData.get('contextid');\n\n    // Get group count.\n    let groupCount = formData.get('rulegroupcount');\n\n    // Create list of penalty rules.\n    let penaltyRules = [];\n\n    // Current penalty rules.\n    for (let i = 0; i < groupCount; i++) {\n        let penaltyRule = new PenaltyRule();\n        penaltyRule.overdueby = formData.get(`overdueby[${i}][number]`) * formData.get(`overdueby[${i}][timeunit]`);\n        penaltyRule.penalty = formData.get(`penalty[${i}]`);\n        penaltyRules.push(penaltyRule);\n    }\n\n    return {\n        contextid: contextid,\n        penaltyrules: JSON.stringify(penaltyRules),\n        finalpenaltyrule: formData.get('finalpenaltyrule'),\n    };\n};\n\n/**\n * Load the penalty rule form.\n *\n * @param {integer} contextid\n * @param {object} params\n */\nconst loadPenaltyRuleForm = (contextid, params) => {\n    Fragment.loadFragment('gradepenalty_duedate', 'penalty_rule_form', contextid, params)\n        .done((html, js) => {\n            // Replace the form with the new form.\n            let formContainer = document.querySelector(SELECTORS.FORM_CONTAINER);\n            Templates.replaceNodeContents(formContainer, html, js);\n        }).fail(notification.exception);\n};\n\n/**\n * Initialize the js.\n */\nexport const init = () => {\n    registerEventListeners();\n};\n"],"names":["PenaltyRule","constructor","overdueby","penalty","SELECTORS","deleteRule","target","params","buildFormParams","rulenumber","dataset","undefined","parentElement","parseInt","penaltyRules","JSON","parse","penaltyrules","splice","stringify","loadPenaltyRuleForm","contextid","insertRule","penaltyRule","addRule","push","form","document","querySelector","formData","FormData","get","groupCount","i","finalpenaltyrule","loadFragment","done","html","js","formContainer","replaceNodeContents","fail","notification","exception","actionMenus","querySelectorAll","forEach","actionMenu","deleteButton","insertButton","addEventListener","e","preventDefault","registerEventListeners"],"mappings":";;;;;;;oHA8BMA,YACFC,mBACSC,UAAY,OACZC,QAAU,SAOjBC,yBACc,+BADdA,sBAEW,eAFXA,qBAGU,iBAHVA,wBAIa,eAJbA,wBAKa,qBAkDbC,WAAaC,aAEXC,OAASC,kBAGTC,WAAaH,OAAOI,QAAQD,gBAGbE,IAAfF,aACAA,WAAaH,OAAOM,cAAcF,QAAQD,YAI9CA,WAAaI,SAASJ,gBAGlBK,aAAeC,KAAKC,MAAMT,OAAOU,cACrCH,aAAaI,OAAOT,WAAY,GAChCK,aAAeC,KAAKI,UAAUL,cAC9BP,OAAOU,aAAeH,aAEtBM,oBAAoBb,OAAOc,UAAWd,SAQpCe,WAAahB,aAEXC,OAASC,kBAGTC,WAAaH,OAAOI,QAAQD,gBAGbE,IAAfF,aACAA,WAAaH,OAAOM,cAAcF,QAAQD,YAI9CA,WAAaI,SAASJ,gBAGlBc,YAAc,IAAIvB,YAClBc,aAAeC,KAAKC,MAAMT,OAAOU,cACrCH,aAAaI,OAAOT,WAAa,EAAG,EAAGc,aACvCT,aAAeC,KAAKI,UAAUL,cAC9BP,OAAOU,aAAeH,aAEtBM,oBAAoBb,OAAOc,UAAWd,SAMpCiB,QAAU,SAERjB,OAASC,kBAGTe,YAAc,IAAIvB,YAClBc,aAAeC,KAAKC,MAAMT,OAAOU,cACrCH,aAAaW,KAAKF,aAClBT,aAAeC,KAAKI,UAAUL,cAC9BP,OAAOU,aAAeH,aAEtBM,oBAAoBb,OAAOc,UAAWd,SAQpCC,gBAAkB,SAGhBkB,KADYC,SAASC,cAAcxB,0BAClBwB,cAAc,QAG/BC,SAAW,IAAIC,SAASJ,MAGxBL,UAAYQ,SAASE,IAAI,aAGzBC,WAAaH,SAASE,IAAI,kBAG1BjB,aAAe,OAGd,IAAImB,EAAI,EAAGA,EAAID,WAAYC,IAAK,KAC7BV,YAAc,IAAIvB,YACtBuB,YAAYrB,UAAY2B,SAASE,wBAAiBE,gBAAgBJ,SAASE,wBAAiBE,kBAC5FV,YAAYpB,QAAU0B,SAASE,sBAAeE,QAC9CnB,aAAaW,KAAKF,mBAGf,CACHF,UAAWA,UACXJ,aAAcF,KAAKI,UAAUL,cAC7BoB,iBAAkBL,SAASE,IAAI,sBAUjCX,oBAAsB,CAACC,UAAWd,4BAC3B4B,aAAa,uBAAwB,oBAAqBd,UAAWd,QACzE6B,MAAK,CAACC,KAAMC,UAELC,cAAgBZ,SAASC,cAAcxB,6CACjCoC,oBAAoBD,cAAeF,KAAMC,OACpDG,KAAKC,aAAaC,0BAMT,KA1KW,YAGrBC,YADUjB,SAASC,cAAcxB,0BACTyC,iBAAiBzC,2BAG3CK,WAAa,EACjBmC,YAAYE,SAAQC,mBACVC,aAAeD,WAAWnB,cAAcxB,yBACxC6C,aAAeF,WAAWnB,cAAcxB,yBAG9C4C,aAAatC,QAAQD,WAAaA,WAElCuC,aAAaE,iBAAiB,SAASC,IACnCA,EAAEC,iBACF/C,WAAW8C,EAAE7C,WAIjB2C,aAAavC,QAAQD,WAAaA,WAElCwC,aAAaC,iBAAiB,SAASC,IACnCA,EAAEC,iBACF9B,WAAW6B,EAAE7C,WAIjBG,gBAIckB,SAASC,cAAcxB,sBAC/B8C,iBAAiB,SAASC,IAChCA,EAAEC,iBACF5B,cAwIJ6B"}